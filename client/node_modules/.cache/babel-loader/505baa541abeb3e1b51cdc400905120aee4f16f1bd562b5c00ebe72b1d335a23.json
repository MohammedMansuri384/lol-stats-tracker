{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohammed\\\\Documents\\\\GitHub\\\\lol-stats-tracker\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './App.css';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gameName, setGameName] = useState(\"\");\n  const [tagLine, setTagLine] = useState(\"\");\n  const [region, setRegion] = useState(\"na1\"); // Default region\n  const [playerStats, setPlayerStats] = useState(null); // Initial state\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const regions = [{\n    value: \"na1\",\n    label: \"North America\"\n  }, {\n    value: \"euw1\",\n    label: \"Europe West\"\n  }, {\n    value: \"eun1\",\n    label: \"Europe Nordic & East\"\n  }, {\n    value: \"kr\",\n    label: \"Korea\"\n  }, {\n    value: \"jp1\",\n    label: \"Japan\"\n  }, {\n    value: \"br1\",\n    label: \"Brazil\"\n  }, {\n    value: \"la1\",\n    label: \"Latin America North\"\n  }, {\n    value: \"la2\",\n    label: \"Latin America South\"\n  }, {\n    value: \"oc1\",\n    label: \"Oceania\"\n  }, {\n    value: \"tr1\",\n    label: \"Turkey\"\n  }, {\n    value: \"ru\",\n    label: \"Russia\"\n  }, {\n    value: \"ph2\",\n    label: \"Philippines\"\n  }, {\n    value: \"sg2\",\n    label: \"Singapore\"\n  }, {\n    value: \"th2\",\n    label: \"Thailand\"\n  }, {\n    value: \"tw2\",\n    label: \"Taiwan\"\n  }, {\n    value: \"vn2\",\n    label: \"Vietnam\"\n  }];\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!gameName.trim() || !tagLine.trim()) {\n      setError(\"Please enter both Game Name and Tag Line\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    setPlayerStats(null);\n    try {\n      const response = await axios.get(`http://localhost:3001/api/player/${gameName.trim()}/${tagLine.trim()}/${region}/stats`);\n      setPlayerStats(response.data);\n    } catch (err) {\n      console.error('Error fetching player stats:', err);\n      if (err.response && err.response.data && err.response.data.error) {\n        setError(err.response.data.error);\n      } else if (err.message) {\n        setError(err.message);\n      } else {\n        setError(\"An error occurred while fetching player stats.\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getPieChartData = (wins, losses) => {\n    const data = [];\n    if (wins > 0) data.push({\n      name: 'Wins',\n      value: wins\n    });\n    if (losses > 0) data.push({\n      name: 'Losses',\n      value: losses\n    });\n    if (wins === 0 && losses === 0 && data.length === 0) {\n      data.push({\n        name: 'N/A',\n        value: 1\n      });\n    }\n    return data;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      style: {\n        display: playerStats ? 'none' : 'block'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LoL Stat Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: `search-form ${playerStats ? 'search-form-top' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: gameName,\n            onChange: e => setGameName(e.target.value),\n            placeholder: \"Enter Riot Game Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tagline-separator\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: tagLine,\n            onChange: e => setTagLine(e.target.value),\n            placeholder: \"TAG\",\n            required: true,\n            className: \"tagline-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: region,\n          onChange: e => setRegion(e.target.value),\n          children: regions.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: r.value,\n            children: [r.label, \" (\", r.value.toUpperCase(), \")\"]\n          }, r.value, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? 'Searching...' : 'Get Stats'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 27\n      }, this), playerStats && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Match Stats for \", gameName, \"#\", tagLine, \" (\", region.toUpperCase(), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), playerStats.message && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: playerStats.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 49\n        }, this), typeof playerStats.overallWins === 'number' && typeof playerStats.overallLosses === 'number' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"charts-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Overall Win Rate (\", playerStats.overallWins + playerStats.overallLosses, \" Games)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wins: \", playerStats.overallWins, \" | Losses: \", playerStats.overallLosses]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 250,\n            children: /*#__PURE__*/_jsxDEV(PieChart, {\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                dataKey: \"value\",\n                data: getPieChartData(playerStats.overallWins, playerStats.overallLosses),\n                outerRadius: 80,\n                labelLine: false,\n                label: ({\n                  name,\n                  percent,\n                  value\n                }) => value && name !== 'N/A' ? `${name}: ${(percent * 100).toFixed(0)}%` : name === 'N/A' ? 'No Games' : '',\n                children: getPieChartData(playerStats.overallWins, playerStats.overallLosses).map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: entry.name === 'Wins' ? '#28a745' : entry.name === 'Losses' ? '#dc3545' : '#cccccc'\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 33\n          }, this), playerStats.championWinRates && playerStats.championWinRates.length > 0 ? playerStats.championWinRates.map((champ, index) => {\n            const wins = champ.wins;\n            const losses = champ.gamesPlayed - champ.wins;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '2rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [champ.championName, \" (\", champ.gamesPlayed, \" Games)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Wins: \", wins, \" | Losses: \", losses]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: 200,\n                children: /*#__PURE__*/_jsxDEV(PieChart, {\n                  children: [/*#__PURE__*/_jsxDEV(Pie, {\n                    dataKey: \"value\",\n                    data: getPieChartData(wins, losses),\n                    outerRadius: 70,\n                    labelLine: false,\n                    label: ({\n                      name,\n                      percent,\n                      value\n                    }) => value && name !== 'N/A' ? `${name}: ${(percent * 100).toFixed(0)}%` : name === 'N/A' ? 'No Games' : '',\n                    children: getPieChartData(wins, losses).map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                      fill: entry.name === 'Wins' ? '#28a745' : entry.name === 'Losses' ? '#dc3545' : '#cccccc'\n                    }, `cell-champ-${index}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 65\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 49\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 45\n            }, this);\n          }) :\n          // Only show \"No specific champion data\" if championWinRates is an empty array (and not undefined)\n          playerStats.championWinRates && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No specific champion data to display for the top champions.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, this), playerStats.matches && playerStats.matches.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Recent Matches:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"match-list\",\n            children: playerStats.matches.map(match => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: match.win ? 'match-win' : 'match-loss',\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"match-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"champion-name\",\n                  children: match.championName || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"game-mode\",\n                  children: [\"(\", match.gameMode ? match.gameMode.replace(/_/g, ' ') : 'N/A', \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"match-score\",\n                children: [\"KDA: \", match.kills, \"/\", match.deaths, \"/\", match.assists]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"match-result\",\n                children: match.win ? 'Victory' : 'Defeat'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"match-timestamp\",\n                children: [new Date(match.gameCreation).toLocaleDateString(), ' ', new Date(match.gameCreation).toLocaleTimeString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 45\n              }, this)]\n            }, match.match_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : playerStats.matches && !playerStats.message && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No recent matches to display.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 76\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"home-btn\",\n          onClick: () => {\n            setPlayerStats(null);\n            setGameName(\"\");\n            setTagLine(\"\");\n            setError(null);\n          },\n          children: \"Search Another Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"pE8SvHaAxaw97CvXz6N0XrGoN3o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","PieChart","Pie","Cell","ResponsiveContainer","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","gameName","setGameName","tagLine","setTagLine","region","setRegion","playerStats","setPlayerStats","loading","setLoading","error","setError","regions","value","label","handleSubmit","e","preventDefault","trim","response","get","data","err","console","message","getPieChartData","wins","losses","push","name","length","className","children","style","display","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","placeholder","required","map","r","toUpperCase","disabled","overallWins","overallLosses","width","height","dataKey","outerRadius","labelLine","percent","toFixed","entry","index","fill","championWinRates","champ","gamesPlayed","marginTop","championName","matches","match","win","gameMode","replace","kills","deaths","assists","Date","gameCreation","toLocaleDateString","toLocaleTimeString","match_id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mohammed/Documents/GitHub/lol-stats-tracker/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './App.css';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Tooltip, Legend } from 'recharts';\n\nfunction App() {\n    const [gameName, setGameName] = useState(\"\");\n    const [tagLine, setTagLine] = useState(\"\");\n    const [region, setRegion] = useState(\"na1\"); // Default region\n    const [playerStats, setPlayerStats] = useState(null); // Initial state\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const regions = [\n        { value: \"na1\", label: \"North America\" },\n        { value: \"euw1\", label: \"Europe West\" },\n        { value: \"eun1\", label: \"Europe Nordic & East\" },\n        { value: \"kr\", label: \"Korea\" },\n        { value: \"jp1\", label: \"Japan\" },\n        { value: \"br1\", label: \"Brazil\" },\n        { value: \"la1\", label: \"Latin America North\" },\n        { value: \"la2\", label: \"Latin America South\" },\n        { value: \"oc1\", label: \"Oceania\" },\n        { value: \"tr1\", label: \"Turkey\" },\n        { value: \"ru\", label: \"Russia\" },\n        { value: \"ph2\", label: \"Philippines\" },\n        { value: \"sg2\", label: \"Singapore\" },\n        { value: \"th2\", label: \"Thailand\" },\n        { value: \"tw2\", label: \"Taiwan\" },\n        { value: \"vn2\", label: \"Vietnam\" },\n    ];\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!gameName.trim() || !tagLine.trim()) {\n            setError(\"Please enter both Game Name and Tag Line\");\n            return;\n        }\n        setLoading(true);\n        setError(null);\n        setPlayerStats(null); \n\n        try {\n            const response = await axios.get(`http://localhost:3001/api/player/${gameName.trim()}/${tagLine.trim()}/${region}/stats`);\n            setPlayerStats(response.data);\n        } catch (err) {\n            console.error('Error fetching player stats:', err);\n            if (err.response && err.response.data && err.response.data.error) {\n                setError(err.response.data.error);\n            } else if (err.message) {\n                setError(err.message);\n            } else {\n                setError(\"An error occurred while fetching player stats.\");\n            }\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const getPieChartData = (wins, losses) => {\n        const data = [];\n        if (wins > 0) data.push({ name: 'Wins', value: wins });\n        if (losses > 0) data.push({ name: 'Losses', value: losses });\n        if (wins === 0 && losses === 0 && data.length === 0) {\n            data.push({ name: 'N/A', value: 1 });\n        }\n        return data;\n    };\n\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\" style={{ display: playerStats ? 'none' : 'block' }}>\n                <h1>LoL Stat Tracker</h1>\n            </header>\n            <main>\n                <form onSubmit={handleSubmit} className={`search-form ${playerStats ? 'search-form-top' : ''}`}>\n                    <div className=\"input-group\">\n                        <input\n                            type=\"text\"\n                            value={gameName}\n                            onChange={(e) => setGameName(e.target.value)}\n                            placeholder=\"Enter Riot Game Name\"\n                            required\n                        />\n                        <span className=\"tagline-separator\">#</span>\n                        <input\n                            type=\"text\"\n                            value={tagLine}\n                            onChange={(e) => setTagLine(e.target.value)}\n                            placeholder=\"TAG\"\n                            required\n                            className=\"tagline-input\"\n                        />\n                    </div>\n                    <select value={region} onChange={(e) => setRegion(e.target.value)}>\n                        {regions.map((r) => (\n                            <option key={r.value} value={r.value}>\n                                {r.label} ({r.value.toUpperCase()})\n                            </option>\n                        ))}\n                    </select>\n                    <button type=\"submit\" disabled={loading}>\n                        {loading ? 'Searching...' : 'Get Stats'}\n                    </button>\n                </form>\n\n                {error && <p className=\"error-message\">{error}</p>}\n\n                {/* Conditional Rendering for the entire stats block */}\n                {playerStats && (\n                    <div className=\"stats-container\">\n                        <h2>\n                            Match Stats for {gameName}#{tagLine} ({region.toUpperCase()})\n                        </h2>\n\n                        {/* Display message from backend if any (e.g., \"No matches found\") */}\n                        {playerStats.message && <p>{playerStats.message}</p>}\n\n                        {/* Overall Win Rate Chart - Check if overallWins/Losses exist */}\n                        {(typeof playerStats.overallWins === 'number' && typeof playerStats.overallLosses === 'number') && (\n                            <div className=\"charts-section\">\n                                <h3>Overall Win Rate ({playerStats.overallWins + playerStats.overallLosses} Games)</h3>\n                                <p>Wins: {playerStats.overallWins} | Losses: {playerStats.overallLosses}</p>\n                                <ResponsiveContainer width=\"100%\" height={250}>\n                                    <PieChart>\n                                        <Pie\n                                            dataKey=\"value\"\n                                            data={getPieChartData(playerStats.overallWins, playerStats.overallLosses)}\n                                            outerRadius={80}\n                                            labelLine={false}\n                                            label={({ name, percent, value }) => (value && name !== 'N/A') ? `${name}: ${(percent * 100).toFixed(0)}%` : (name === 'N/A' ? 'No Games' : '')}\n                                        >\n                                            {/* Conditional Cells */}\n                                            {getPieChartData(playerStats.overallWins, playerStats.overallLosses).map((entry, index) => (\n                                                <Cell key={`cell-${index}`} fill={entry.name === 'Wins' ? '#28a745' : entry.name === 'Losses' ? '#dc3545' : '#cccccc'} />\n                                            ))}\n                                        </Pie>\n                                        <Tooltip />\n                                        <Legend />\n                                    </PieChart>\n                                </ResponsiveContainer>\n\n                                {/* Champion Win Rates - Check if championWinRates is an array and has items */}\n                                {playerStats.championWinRates && playerStats.championWinRates.length > 0 ? (\n                                    playerStats.championWinRates.map((champ, index) => {\n                                        const wins = champ.wins;\n                                        const losses = champ.gamesPlayed - champ.wins;\n                                        return (\n                                            <div key={index} style={{ marginTop: '2rem' }}>\n                                                <h4>{champ.championName} ({champ.gamesPlayed} Games)</h4>\n                                                <p>Wins: {wins} | Losses: {losses}</p>\n                                                <ResponsiveContainer width=\"100%\" height={200}>\n                                                    <PieChart>\n                                                        <Pie\n                                                            dataKey=\"value\"\n                                                            data={getPieChartData(wins, losses)}\n                                                            outerRadius={70}\n                                                            labelLine={false}\n                                                            label={({ name, percent, value }) => (value && name !== 'N/A') ? `${name}: ${(percent * 100).toFixed(0)}%` : (name === 'N/A' ? 'No Games' : '')}\n                                                        >\n                                                            {getPieChartData(wins, losses).map((entry, index) => (\n                                                                <Cell key={`cell-champ-${index}`} fill={entry.name === 'Wins' ? '#28a745' : entry.name === 'Losses' ? '#dc3545' : '#cccccc'} />\n                                                            ))}\n                                                        </Pie>\n                                                        <Tooltip />\n                                                        <Legend />\n                                                    </PieChart>\n                                                </ResponsiveContainer>\n                                            </div>\n                                        );\n                                    })\n                                ) : (\n                                    // Only show \"No specific champion data\" if championWinRates is an empty array (and not undefined)\n                                    playerStats.championWinRates && <p>No specific champion data to display for the top champions.</p>\n                                )}\n                            </div>\n                        )}\n\n                        {/* Recent Matches - Check if matches is an array and has items */}\n                        {playerStats.matches && playerStats.matches.length > 0 ? (\n                            <>\n                                <h4>Recent Matches:</h4>\n                                <ul className=\"match-list\">\n                                    {playerStats.matches.map((match) => (\n                                        <li key={match.match_id} className={match.win ? 'match-win' : 'match-loss'}>\n                                            <div className=\"match-info\">\n                                                <span className=\"champion-name\">{match.championName || 'N/A'}</span>\n                                                <span className=\"game-mode\">({match.gameMode ? match.gameMode.replace(/_/g, ' ') : 'N/A'})</span>\n                                            </div>\n                                            <div className=\"match-score\">\n                                                KDA: {match.kills}/{match.deaths}/{match.assists}\n                                            </div>\n                                            <div className=\"match-result\">\n                                                {match.win ? 'Victory' : 'Defeat'}\n                                            </div>\n                                            <div className=\"match-timestamp\">\n                                                {new Date(match.gameCreation).toLocaleDateString()}{' '}\n                                                {new Date(match.gameCreation).toLocaleTimeString()}\n                                            </div>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </>\n                        ) : (\n                            playerStats.matches && !playerStats.message && <p>No recent matches to display.</p>\n                        )}\n\n                        <button className=\"home-btn\" onClick={() => {\n                            setPlayerStats(null);\n                            setGameName(\"\"); \n                            setTagLine(\"\");\n                            setError(null);\n                        }}>\n                            Search Another Player\n                        </button>\n                    </div>\n                )}\n            </main>\n        </div>\n    );\n}\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}